{"version":3,"sources":["component/MissionComponent.jsx","component/Landing.jsx","App.js","serviceWorker.js","index.js"],"names":["MissionComponent","data","this","props","className","src","links","mission_patch_small","mission_name","mission_id","launch_year","launch_success","Component","Landing","getData","axios","get","params","limit","state","landing_success","then","res","setState","missionData","handleYear","year","handleLanding","handleLaunching","handleRemoveFilter","onClick","map","index","key","length","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d5f8afe8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass MissionComponent extends Component {\r\n  render() {\r\n    const { data } = this.props;\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          <div className=\"img-container\">\r\n            <img\r\n              src={data && data.links && data.links.mission_patch_small}\r\n              className=\"mission-img\"\r\n            />\r\n          </div>\r\n          <div className=\"mission-name mt-5\">{data.mission_name}</div>\r\n          <div className=\"mt-2\">\r\n            <span className=\"mission-label\">Mission Id :</span>\r\n            <span className=\"mission-value ml-2\">{data && data.mission_id && data.mission_id[0]}</span>\r\n          </div>\r\n          <div className=\"mt-2\">\r\n            <span className=\"mission-label\">Launch Year:</span>\r\n            <span className=\"mission-value ml-2\">{data && data.launch_year}</span>\r\n          </div>\r\n          <div className=\"mt-2\">\r\n            <span className=\"mission-label\">Successful Launch:</span>\r\n            <span className=\"mission-value ml-2\">{data && data.launch_success?\"True\":\"False\"}</span>\r\n          </div>\r\n          <div className=\"mt-2\">\r\n            <span className=\"mission-label\">Successful Landing:</span>\r\n            <span className=\"mission-value ml-2\">{data && data.launch_success?\"True\":\"False\"}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MissionComponent;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport MissionComponent from \"./MissionComponent\";\r\n\r\nclass Landing extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      missionData: [],\r\n      launch_year: \"\",\r\n      landing_success: \"\",\r\n      launch_success: \"\",\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getData();\r\n  }\r\n\r\n  getData = () => {\r\n    axios\r\n      .get(\"https://api.spaceXdata.com/v3/launches\", {\r\n        params: {\r\n          limit: 100,\r\n          launch_success: this.state.launch_success,\r\n          landing_success: this.state.landing_success,\r\n          launch_year: this.state.launch_year,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res && res.data) {\r\n          this.setState({ missionData: res.data });\r\n        }\r\n      });\r\n  };\r\n  handleYear = (year) => {\r\n    this.setState({ launch_year: year }, () => this.getData());\r\n  };\r\n  handleLanding = (data) => {\r\n    this.setState({ landing_success: data }, () => this.getData());\r\n  };\r\n  handleLaunching = (data) => {\r\n    this.setState({ launch_success: data }, () => this.getData());\r\n  };\r\n  handleRemoveFilter = () => {\r\n    this.setState(\r\n      { launch_success: \"\", landing_success: \"\", launch_year: \"\" },\r\n      () => this.getData()\r\n    );\r\n  };\r\n  render() {\r\n    let {\r\n      missionData,\r\n      launch_success,\r\n      landing_success,\r\n      launch_year,\r\n    } = this.state;\r\n    let years = [\r\n      \"2006\",\r\n      \"2007\",\r\n      \"2008\",\r\n      \"2009\",\r\n      \"2010\",\r\n      \"2011\",\r\n      \"2012\",\r\n      \"2013\",\r\n      \"2014\",\r\n      \"2015\",\r\n      \"2016\",\r\n      \"2017\",\r\n      \"2018\",\r\n      \"2019\",\r\n      \"2020\",\r\n    ];\r\n    return (\r\n      <div className=\"container-fluid\">\r\n        <h1>SpaceX Lunch Programs</h1>\r\n        <div className=\"row\">\r\n          <div className=\"col-sm-2 mt-3 \">\r\n            <div className=\"card\">\r\n              <div className=\"card-body\">\r\n                <h4>Filters</h4>\r\n                {(launch_success !== \"\" ||\r\n                  landing_success !== \"\" ||\r\n                  launch_year !== \"\") ? (\r\n                    <span\r\n                      className=\"remove-filter\"\r\n                      onClick={this.handleRemoveFilter}\r\n                    >\r\n                      Clear filter\r\n                    </span>\r\n                  ):\"\"}\r\n                <div className=\"text-center text-primary textdecoration\">Launch Year</div>\r\n                {years.map((data, index) => {\r\n                  return (\r\n                    <button\r\n                      className=\"btn btn-success m-1\"\r\n                      key={index}\r\n                      onClick={() => this.handleYear(data)}\r\n                    >\r\n                      {data}\r\n                    </button>\r\n                  );\r\n                })}\r\n\r\n                <div className=\"text-center text-primary textdecoration\">\r\n                  Successful Launch\r\n                </div>\r\n                <div>\r\n                  <button\r\n                    className=\"btn btn-success m-1\"\r\n                    onClick={() => this.handleLaunching(true)}\r\n                  >\r\n                    True\r\n                  </button>\r\n                  <button\r\n                    className=\"btn btn-success m-1\"\r\n                    onClick={() => this.handleLaunching(false)}\r\n                  >\r\n                    False\r\n                  </button>\r\n                </div>\r\n                <div className=\"text-center text-primary textdecoration\">\r\n                  Successful Landing\r\n                </div>\r\n                <div>\r\n                  <button\r\n                    className=\"btn btn-success m-1\"\r\n                    onClick={() => this.handleLanding(true)}\r\n                  >\r\n                    True\r\n                  </button>\r\n                  <button\r\n                    className=\"btn btn-success m-1\"\r\n                    onClick={() => this.handleLanding(false)}\r\n                  >\r\n                    False\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-sm-10 \">\r\n            <div className=\"row\">\r\n              {missionData &&\r\n                missionData.length > 0 &&\r\n                missionData.map((data, index) => {\r\n                  return (\r\n                    <div className=\"col-sm-6 col-md-3 mt-3\" key={index}>\r\n                      <MissionComponent data={data} />\r\n                    </div>\r\n                  );\r\n                })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Landing;\r\n","import React from 'react';\nimport './App.css';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport Landing from \"./component/Landing\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <Landing />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}